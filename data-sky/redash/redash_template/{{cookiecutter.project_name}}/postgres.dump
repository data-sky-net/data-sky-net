--
-- PostgreSQL database dump
--


--
-- Data for Name: queries; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.queries (updated_at, created_at, id, version, org_id, data_source_id, latest_query_data_id, name, description, query, query_hash, api_key, user_id, last_modified_by_id, is_archived, is_draft, schedule, schedule_failures, options, search_vector, tags) FROM stdin;
2020-05-28 12:20:08.576873+00	2020-05-28 12:14:16.71499+00	1	1	1	1	\N	Number of submits per day	\N	{\n\t"collection": "submits",\n\t"aggregate": [\n\t\t{\n\t\t\t"$match": {\n\t\t\t\t"message": "{% raw %}{{message}}{% endraw %}"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$group": {\n\t\t\t\t"_id": {\n\t\t\t\t\t"$dateToString": {\n\t\t\t\t\t\t"format": "%Y-%m-%d",\n\t\t\t\t\t\t"date": {\n\t\t\t\t\t\t\t"$add": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t"$multiply": [\n\t\t\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t\t\t"$creation_ts"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t"$date": "1970-01-01T00:00:00Z"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"count": {\n\t\t\t\t\t"$sum": 1\n\t\t\t\t},\n\t\t\t\t"ccount": {\n\t\t\t\t\t"$sum": 1\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$sort": [\n\t\t\t\t{\n\t\t\t\t\t"name": "_id",\n\t\t\t\t\t"direction": -1\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}	5a4c76fcc8dd91c28325cf5efc3bc002	h4d9JVXqAzqfpyuu5e0rYE4awbrSwol5jPWcozRe	1	1	f	f	\N	0	{"parameters": [{"name": "message", "title": "message", "value": "{{cookiecutter.message}}", "global": false, "type": "text", "locals": []}]}	'00':30 '00z':31 '01':28 '01t00':29 '1':1B,34,37,42 '1000':23 '1970':27 'add':21 'aggregate':9 'ccount':35 'collection':7 'count':32 'creation':24 'd':19 'date':20,26 'datetostring':15 'day':6A 'direction':41 'format':16 'group':13 'id':14,40 'm':18 'match':10 'message':11,12 'multiply':22 'name':39 'number':2A 'of':3A 'per':5A 'sort':38 'submits':4A,8 'sum':33,36 'ts':25 'y':17	{for_message,{{cookiecutter.message}}}
2020-05-28 12:24:37.491944+00	2020-05-28 12:23:02.290638+00	2	1	1	1	\N	Max score {{cookiecutter.metric}}	\N	{\n\t"collection": "submits",\n\t"aggregate": [\n\t\t{\n\t\t\t"$match": {\n\t\t\t\t"message": "{% raw %}{{message}}{% endraw %}"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$group": {\n\t\t\t\t"_id": null,\n\t\t\t\t"max": {\n\t\t\t\t\t"$max": "${% raw %}{{metric}}{% endraw %}"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n}\n	6ba0560f4a3b23a49d61513a9b243c79	16znV6zh6f2Mlztp8VRsUasYELbmoZqg4FUVG969	1	1	f	f	\N	0	{"parameters": [{"name": "message", "title": "message", "global": false,  "value": "{{cookiecutter.message}}", "type": "text", "locals": []}, {"name": "metric", "title": "metric", "global": false,  "value": "{{cookiecutter.metric}}", "type": "text", "locals": []}]}	'2':1B 'aggregate':7 'collection':5 'group':11 'id':12 'match':8 'max':2A,14,15 'message':9,10 'metric':16 'null':13 'roc':4A 'score':3A 'submits':6	{for_each_metrics,{{cookiecutter.message}}}
2020-05-28 12:29:37.981733+00	2020-05-28 12:29:20.453938+00	4	1	1	1	\N	Last submite date	\N	{\n\t"collection": "submits",\n\t"aggregate": [\n\t\t{\n\t\t\t"$match": {\n\t\t\t\t"message": "{% raw %}{{message}}{% endraw %}"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$group": {\n\t\t\t\t"_id": {\n\t\t\t\t\t"$dateToString": {\n\t\t\t\t\t\t"format": "%Y-%m-%d ",\n\t\t\t\t\t\t"date": {\n\t\t\t\t\t\t\t"$add": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t"$multiply": [\n\t\t\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t\t\t"$creation_ts"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t"$date": "1970-01-01T00:00:00Z"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"count": {\n\t\t\t\t\t"$sum": 1\n\t\t\t\t},\n\t\t\t\t"ccount": {\n\t\t\t\t\t"$sum": 1\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$sort": [\n\t\t\t\t{\n\t\t\t\t\t"name": "_id",\n\t\t\t\t\t"direction": -1\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"$limit": 1\n\t\t},\n\t\t{\n\t\t\t"$project": {\n\t\t\t\t"_id": 0,\n\t\t\t\t"date": "$_id"\n\t\t\t}\n\t\t}\n\t]\n}	57da44d918bc4f3aa4f8c4cfd73f2610	KPfFwQToJtbIabUJc36BuOnwDuzCVsVEKeLWdxES	1	1	f	f	\N	0	{"parameters": [{"name": "message", "title": "message", "global": false, "value": "{{cookiecutter.message}}", "type": "text", "locals": []}]}	'0':45 '00':28 '00z':29 '01':26 '01t00':27 '1':32,35,40,42 '1000':21 '1970':25 '4':1B 'add':19 'aggregate':7 'ccount':33 'collection':5 'count':30 'creation':22 'd':17 'date':4A,18,24,46 'datetostring':13 'direction':39 'format':14 'group':11 'id':12,38,44,47 'last':2A 'limit':41 'm':16 'match':8 'message':9,10 'multiply':20 'name':37 'project':43 'sort':36 'submite':3A 'submits':6 'sum':31,34 'ts':23 'y':15	{for_message,{{cookiecutter.message}}}
2020-05-28 12:27:38.357577+00	2020-05-28 12:27:18.736688+00	3	1	1	1	\N	Total mumber of submits	\N	{\n\t"collection": "submits",\n\t"aggregate": [\n\t\t{\n\t\t\t"$match": {\n\t\t\t\t"message": "{% raw %}{{message}}{% endraw %}"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$group": {\n\t\t\t\t"_id": null,\n\t\t\t\t"count": {\n\t\t\t\t\t"$sum": 1\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{"$project": {"_id": 0, "n_of_submits": "$count"}}\n\t]\n}	c6799faa3b44e202703e7fa236823349	Wt7kYBCxwgB6w6DSSW49eBGMNZ33s2aKRZLkNGAB	1	1	f	f	\N	0	{"parameters": [{"name": "message", "title": "message", "global": false, "value": "{{cookiecutter.message}}", "type": "text", "locals": []}]}	'0':20 '1':17 '3':1B 'aggregate':8 'collection':6 'count':15,24 'group':12 'id':13,19 'match':9 'message':10,11 'mumber':3A 'n':21 'null':14 'of':4A,22 'project':18 'submits':5A,7,23 'sum':16 'total':2A	{for_message,{{cookiecutter.message}}}
2020-05-28 12:36:39.889285+00	2020-05-28 12:36:19.621884+00	5	1	1	1	\N	Max score by author {{cookiecutter.metric}}	\N	{\n\t"collection": "submits",\n\t"aggregate": [\n\t\t{\n\t\t\t"$match": {\n\t\t\t\t"message": "{% raw %}{{message}}{% endraw %}"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$unwind": "$author"\n\t\t},\n\t\t{\n\t\t\t"$group": {\n\t\t\t\t"_id": "$author",\n\t\t\t\t"max": {\n\t\t\t\t\t"$max": "${% raw %}{{metric}}{% endraw %}"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$sort": [\n\t\t\t\t{\n\t\t\t\t\t"name": "max",\n\t\t\t\t\t"direction": -1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"name": "_id",\n\t\t\t\t\t"direction": -1\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"$project": {\n\t\t\t\t"_id": 0,\n\t\t\t\t"author": "$_id",\n\t\t\t\t"max": 1\n\t\t\t}\n\t\t}\n\t]\n}	56116a2d790645870acb2040df5e2caf	FggL8PlqfW5UtJ4SgBgViPlELSXU34DDzWwTmrDQ	1	1	f	f	\N	0	{"parameters": [{"name": "message", "title": "message", "global": false, "value": "{{cookiecutter.message}}", "type": "text", "locals": []}, {"name": "metric", "title": "metric", "global": false, "value": "{{cookiecutter.metric}}", "type": "text", "locals": []}]}	'0':32 '1':25,29,36 '5':1B 'aggregate':9 'author':5A,14,17,33 'by':4A 'collection':7 'direction':24,28 'group':15 'id':16,27,31,34 'match':10 'max':2A,18,19,23,35 'message':11,12 'metric':20 'name':22,26 'project':30 'roc':6A 'score':3A 'sort':21 'submits':8 'unwind':13	{for_each_metrics,{{cookiecutter.message}}}
2020-05-28 12:54:03.591465+00	2020-05-28 12:51:41.193952+00	7	1	1	1	\N	Submits scatterplot, score {{cookiecutter.metric}}	\N	{\n\t"collection": "submits",\n\t"aggregate": [\n\t\t{\n\t\t\t"$match": {\n\t\t\t\t"message": "{% raw %}{{message}}{% endraw %}"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$project": {\n\t\t\t\t"time_series": {\n\t\t\t\t\t"$multiply": [\n\t\t\t\t\t\t"$creation_ts",\n\t\t\t\t\t\t1000\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t"_id": 0,\n\t\t\t\t"author": 1,\n\t\t\t\t"metric": "${% raw %}{{metric}}{% endraw %}"\n\t\t\t}\n\t\t}\n\t]\n}	817db9c85efa91f4247de087fa557296	6ZgGcSXIh0J7nXIinNDoGC9DJQPSIMAW47uBRyM0	1	1	f	f	\N	0	{"parameters": [{"name": "message", "title": "message", "global": false, "value": "{{cookiecutter.message}}", "type": "text", "locals": []}, {"name": "metric", "title": "metric", "global": false, "value": "{{cookiecutter.metric}}", "type": "text", "locals": []}]}	'0':20 '1':22 '1000':18 '7':1B 'aggregate':8 'author':21 'collection':6 'creation':16 'id':19 'match':9 'message':10,11 'metric':23,24 'multiply':15 'project':12 'roc':5A 'scatterplot':3A 'score':4A 'series':14 'submits':2A,7 'time':13 'ts':17	{for_each_metrics,{{cookiecutter.message}}}
2020-05-28 12:49:55.694484+00	2020-05-28 12:38:30.62057+00	6	1	1	1	\N	Number of submits by author	\N	{\n\t"collection": "submits",\n\t"aggregate": [\n\t\t{\n\t\t\t"$match": {\n\t\t\t\t"message": "{% raw %}{{message}}{% endraw %}"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$group": {\n\t\t\t\t"_id": "$author",\n\t\t\t\t"count": {\n\t\t\t\t\t"$sum": 1\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t"$sort": [\n\t\t\t\t{\n\t\t\t\t\t"name": "count",\n\t\t\t\t\t"direction": -1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"name": "_id",\n\t\t\t\t\t"direction": -1\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"$project": {\n\t\t\t\t"_id": 0,\n\t\t\t\t"author": "$_id",\n\t\t\t\t"submits": "$count"\n\t\t\t}\n\t\t}\n\t]\n}	42b978f0ae8b80af157272cec9383af5	4LMARkmuC2Hh6Fip0Fm1v6rbUBP8Adb06VzT5zcf	1	1	f	f	\N	0	{"parameters": [{"name": "message", "title": "message", "global": false, "value": "{{cookiecutter.message}}", "type": "text", "locals": []}]}	'0':30 '1':18,23,27 '6':1B 'aggregate':9 'author':6A,15,31 'by':5A 'collection':7 'count':16,21,34 'direction':22,26 'group':13 'id':14,25,29,32 'match':10 'message':11,12 'name':20,24 'number':2A 'of':3A 'project':28 'sort':19 'submits':4A,8,33 'sum':17	{for_message,{{cookiecutter.message}}}
\.


--
-- Name: queries_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.queries_id_seq', (select max(id) from public.queries));


--
-- Data for Name: dashboards; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.dashboards (updated_at, created_at, id, version, org_id, slug, name, user_id, layout, dashboard_filters_enabled, is_archived, is_draft, tags) FROM stdin;
2020-05-15 14:09:06.622125+00	2020-05-15 14:08:45.06431+00	1	1	1	{{cookiecutter.message}}	{{cookiecutter.message}}	1	[]	f	f	f	\N
\.


--
-- Name: dashboards_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.dashboards_id_seq', 1, true);


COPY public.visualizations (updated_at, created_at, id, type, query_id, name, description, options) FROM stdin;
2020-05-28 12:14:16.71499+00	2020-05-28 12:14:16.71499+00	1	TABLE	1	Table		{}
2020-05-28 12:51:41.193952+00	2020-05-28 12:51:41.193952+00	13	TABLE	7	Table		{}
2020-05-28 12:21:12.336408+00	2020-05-28 12:19:52.514+00	    2	CHART	1			{"direction": {"type": "counterclockwise"}, "missingValuesAsZero": true, "error_y": {"visible": true, "type": "data"}, "numberFormat": "0,0[.]00000", "yAxis": [{"type": "linear"}, {"type": "linear", "opposite": true}], "reverseX": false, "series": {"stacking": null, "error_y": {"visible": true, "type": "data"}}, "globalSeriesType": "column", "percentFormat": "0[.]00%", "sortX": true, "seriesOptions": {"count": {"zIndex": 0, "index": 0, "type": "column", "yAxis": 0}}, "customCode": "// Available variables are x, ys, element, and Plotly\\n// Type console.log(x, ys); for more info about x and ys\\n// To plot your graph call Plotly.plot(element, ...)\\n// Plotly examples and docs: https://plot.ly/javascript/", "valuesOptions": {}, "xAxis": {"labels": {"enabled": true}, "type": "datetime"}, "dateTimeFormat": "DD/MM/YY HH:mm", "columnMapping": {"count": "y", "_id": "x", "ccount": "unused"}, "textFormat": "", "showDataLabels": false, "legend": {"enabled": false}}
2020-05-28 12:23:02.290638+00	2020-05-28 12:23:02.290638+00	3	TABLE	2	Table		{}
2020-05-28 12:25:02.903919+00	2020-05-28 12:23:41.49349+00	4	COUNTER	2			{"tooltipFormat": "0,0.000", "rowNumber": 1, "stringDecChar": ".", "stringDecimal": 6, "counterColName": "max", "counterLabel": "", "stringThouSep": ",", "targetRowNumber": 1}
2020-05-28 12:27:18.736688+00	2020-05-28 12:27:18.736688+00	5	TABLE	3	Table		{}
2020-05-28 12:27:56.137345+00	2020-05-28 12:27:32.822864+00	6	COUNTER	3			{"tooltipFormat": "0,0.000", "rowNumber": 1, "stringDecChar": ".", "stringDecimal": 0, "counterColName": "n_of_submits", "counterLabel": "", "stringThouSep": ",", "targetRowNumber": 1}
2020-05-28 12:29:20.453938+00	2020-05-28 12:29:20.453938+00	7	TABLE	4	Table		{}
2020-05-28 12:29:59.860133+00	2020-05-28 12:29:31.581551+00	8	COUNTER	4			{"tooltipFormat": "0,0.000", "rowNumber": 1, "stringDecChar": ".", "stringDecimal": 6, "counterColName": "date", "counterLabel": "", "stringThouSep": ",", "targetRowNumber": 1}
2020-05-28 12:36:19.621884+00	2020-05-28 12:36:19.621884+00	9	TABLE	5	Table		{}
2020-05-28 12:36:59.391488+00	2020-05-28 12:36:35.37197+00	10	CHART	5			{"direction": {"type": "counterclockwise"}, "missingValuesAsZero": true, "error_y": {"visible": true, "type": "data"}, "numberFormat": "0,0[.]00000", "yAxis": [{"type": "linear"}, {"type": "linear", "opposite": true}], "series": {"stacking": null, "error_y": {"visible": true, "type": "data"}}, "globalSeriesType": "column", "percentFormat": "0[.]00%", "sortX": true, "seriesOptions": {"max": {"zIndex": 0, "index": 0, "type": "column", "yAxis": 0}}, "customCode": "// Available variables are x, ys, element, and Plotly\\n// Type console.log(x, ys); for more info about x and ys\\n// To plot your graph call Plotly.plot(element, ...)\\n// Plotly examples and docs: https://plot.ly/javascript/", "valuesOptions": {}, "xAxis": {"labels": {"enabled": true}, "type": "-"}, "dateTimeFormat": "DD/MM/YY HH:mm", "columnMapping": {"max": "y", "author": "x"}, "textFormat": "", "showDataLabels": false, "legend": {"enabled": false}}
2020-05-28 12:38:30.62057+00	2020-05-28 12:38:30.62057+00	11	TABLE	6	Table		{}
2020-05-28 12:50:17.632475+00	2020-05-28 12:40:24.992+00	    12	CHART	6			{"direction": {"type": "counterclockwise"}, "missingValuesAsZero": true, "error_y": {"visible": true, "type": "data"}, "numberFormat": "0,0[.]00000", "yAxis": [{"type": "linear", "title": {"text": ""}}, {"title": {"text": ""}, "type": "linear", "opposite": true}], "series": {"stacking": null, "error_y": {"visible": true, "type": "data"}}, "globalSeriesType": "pie", "percentFormat": "0[.]00%", "sortX": true, "seriesOptions": {"submits": {"zIndex": 0, "index": 0, "type": "pie", "yAxis": 0}}, "customCode": "// Available variables are x, ys, element, and Plotly\\n// Type console.log(x, ys); for more info about x and ys\\n// To plot your graph call Plotly.plot(element, ...)\\n// Plotly examples and docs: https://plot.ly/javascript/", "valuesOptions": {"Alexander.Vasin": {}, "Eugene.Tcatcorin": {}, "Denis.Shuvalov": {}, "Andrey.Kalmykov": {}, "trivial.model_builder": {}}, "xAxis": {"labels": {"enabled": true}, "type": "-", "title": {"text": ""}}, "dateTimeFormat": "DD/MM/YY HH:mm", "columnMapping": {"submits": "y", "author": "x"}, "textFormat": "", "showDataLabels": true, "legend": {"enabled": false}}
2020-05-28 12:54:19.229632+00	2020-05-28 12:53:26.927654+00	14	CHART	7			{"direction": {"type": "counterclockwise"}, "missingValuesAsZero": true, "error_y": {"visible": true, "type": "data"}, "numberFormat": "0,0[.]00000", "yAxis": [{"type": "linear"}, {"type": "linear", "opposite": true}], "series": {"stacking": null, "error_y": {"visible": true, "type": "data"}}, "globalSeriesType": "scatter", "percentFormat": "0[.]00%", "sortX": true, "seriesOptions": {"Alexander.Vasin": {"zIndex": 1, "index": 0, "type": "scatter", "yAxis": 0}, "Eugene.Tcatcorin": {"zIndex": 3, "index": 0, "type": "scatter", "yAxis": 0}, "Denis.Shuvalov": {"zIndex": 4, "index": 0, "type": "scatter", "yAxis": 0}, "Andrey.Kalmykov": {"zIndex": 2, "index": 0, "type": "scatter", "yAxis": 0}, "trivial.model_builder": {"zIndex": 0, "index": 0, "type": "scatter", "yAxis": 0}}, "customCode": "// Available variables are x, ys, element, and Plotly\\n// Type console.log(x, ys); for more info about x and ys\\n// To plot your graph call Plotly.plot(element, ...)\\n// Plotly examples and docs: https://plot.ly/javascript/", "valuesOptions": {}, "xAxis": {"labels": {"enabled": true}, "type": "datetime"}, "dateTimeFormat": "DD/MM/YY HH:mm", "columnMapping": {"metric": "y", "time_series": "x", "author": "series"}, "textFormat": "", "showDataLabels": false, "legend": {"enabled": true}}
\.


--
-- Name: visualizations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.visualizations_id_seq', (select max(id) from public.visualizations));


--
-- Data for Name: widgets; Type: TABLE DATA; Schema: public; Owner: postgres
--
--
--


COPY public.widgets (updated_at, created_at, id, visualization_id, text, width, options, dashboard_id) FROM stdin;
2020-05-28 12:31:24.874033+00	2020-05-28 12:21:12.336408+00	1	2		1	{"parameterMappings": {"message": {"mapTo": "message", "type": "dashboard-level", "name": "message", "value": null, "title": ""}}, "isHidden": false, "position": {"autoHeight": false, "sizeX": 4, "sizeY": 12, "maxSizeY": 1000, "maxSizeX": 6, "minSizeY": 5, "minSizeX": 1, "col": 0, "row": 0}}	1
2020-05-28 12:54:33.783006+00	2020-05-28 12:54:19.229632+00	7	14		1	{"parameterMappings": {"message": {"mapTo": "message", "type": "dashboard-level", "name": "message", "value": null, "title": ""}, "metric": {"mapTo": "metric", "type": "widget-level", "name": "metric", "value": null, "title": ""}}, "isHidden": false, "position": {"autoHeight": false, "sizeX": 6, "sizeY": 8, "maxSizeY": 1000, "maxSizeX": 6, "minSizeY": 5, "minSizeX": 1, "col": 0, "row": 36}}	1
2020-05-28 12:30:39.55906+00	2020-05-28 12:25:02.903919+00	2	4		1	{"parameterMappings": {"message": {"mapTo": "message", "type": "dashboard-level", "name": "message", "value": null, "title": ""}, "metric": {"mapTo": "metric", "type": "widget-level", "name": "metric", "value": null, "title": ""}}, "isHidden": false, "position": {"autoHeight": false, "sizeX": 2, "sizeY": 6, "maxSizeY": 1000, "maxSizeX": 6, "minSizeY": 1, "minSizeX": 1, "col": 4, "row": 0}}	1
2020-05-28 12:54:08.225664+00	2020-05-28 12:27:56.137345+00	3	6		1	{"parameterMappings": {"message": {"mapTo": "message", "type": "dashboard-level", "name": "message", "value": null, "title": ""}}, "isHidden": false, "position": {"autoHeight": false, "sizeX": 2, "sizeY": 5, "maxSizeY": 1000, "maxSizeX": 6, "minSizeY": 1, "minSizeX": 1, "col": 4, "row": 6}}	1
2020-05-28 12:54:08.227286+00	2020-05-28 12:29:59.860133+00	4	8		1	{"parameterMappings": {"message": {"mapTo": "message", "type": "dashboard-level", "name": "message", "value": null, "title": ""}}, "isHidden": false, "position": {"autoHeight": false, "sizeX": 2, "sizeY": 4, "maxSizeY": 1000, "maxSizeX": 6, "minSizeY": 1, "minSizeX": 1, "col": 4, "row": 17}}	1
2020-05-28 12:54:08.246055+00	2020-05-28 12:50:17.632475+00	6	12		1	{"parameterMappings": {"message": {"mapTo": "message", "type": "dashboard-level", "name": "message", "value": null, "title": ""}}, "isHidden": false, "position": {"autoHeight": false, "sizeX": 2, "sizeY": 8, "maxSizeY": 1000, "maxSizeX": 6, "minSizeY": 5, "minSizeX": 1, "col": 4, "row": 27}}	1
2020-05-28 12:54:08.244225+00	2020-05-28 12:36:59.391488+00	5	10		1	{"parameterMappings": {"message": {"mapTo": "message", "type": "dashboard-level", "name": "message", "value": null, "title": ""}, "metric": {"mapTo": "metric", "type": "widget-level", "name": "metric", "value": null, "title": ""}}, "isHidden": false, "position": {"autoHeight": false, "sizeX": 4, "sizeY": 8, "maxSizeY": 1000, "maxSizeX": 6, "minSizeY": 5, "minSizeX": 1, "col": 0, "row": 12}}	1
\.


--
-- Name: widgets_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.widgets_id_seq', (select max(id) from public.widgets));


--
-- PostgreSQL database dump complete
--

